apiVersion: apps/v1
kind: Deployment
metadata:
  name: conbench-deployment
spec:
  selector:
    matchLabels:
      app: conbench
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: conbench
    spec:
      containers:
      - name: conbench
        image: "<CONBENCH_CONTAINER_IMAGE_SPEC>"
        command: [
          "gunicorn",
          "-b", "0.0.0.0:5000",
          "-w", "5",
          "conbench:application",
          "--access-logfile=-",
          "--error-logfile=-",
          "-c", "conbench/gunicorn-conf.py"
          ]
        # for minikube local docker images
        # added via minikube image load <IMAGE_NAME>
        imagePullPolicy: Never
        #imagePullPolicy: "Always"
        ports:
          - name: gunicorn
            containerPort: 5000
        envFrom:
          - configMapRef:
              name: conbench-config
          - secretRef:
              name: conbench-secret
        resources:
          requests:
            memory: '2Gi'
            cpu: 0.5
        readinessProbe:
          failureThreshold: 1
          httpGet:
            path: /api/ping/
            port: 5000
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 2
          timeoutSeconds: 20
      terminationGracePeriodSeconds: 60
---
apiVersion: monitoring.coreos.com/v1
# This is a CRD defined by the prometheus-operator/kube-prometheus project
kind: ServiceMonitor
metadata:
  name: conbench-service-monitor
spec:
  selector:
    matchLabels:
      app: conbench
  endpoints:
    - path: /metrics
      port: gunicorn
      scheme: http
      interval: 60s
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    alb.ingress.kubernetes.io/target-type: ip
  name: "conbench-service"
  labels:
    app: conbench
spec:
  ports:
  - port: 80
    targetPort: 5000
    protocol: TCP
  type: NodePort
  selector:
    app: "conbench"
