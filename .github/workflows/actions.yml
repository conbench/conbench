name: build

on:
  push:
    branches:
      - main
  pull_request:

env:
  PYTHON_VERSION: "3.8"
  GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout conbench
        uses: actions/checkout@v3
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install linting dependencies
        run: pip install flake8 isort black
      - name: Lint
        run: make lint-ci
      - name: Start PostgreSQL DB
        run: docker compose run --detach db
      # Run `alembic upgrade head` via docker compose so that it is within
      # the network that the DB is also in, reachable via DNS name `db`
      - name: Test database migrations
        run: docker compose run -e CREATE_ALL_TABLES app alembic upgrade head
        env:
          CREATE_ALL_TABLES: false
      - name: Run tests, generate coverage data
        # This is expected to create /etc/conbench-coverage-dir/.coverage
        # in the `app` service container.
        run: make tests
      - name: Convert coverage data to LCOV
        run: |
          docker compose run -e COVERAGE_FILE=/etc/conbench-coverage-dir/.coverage app \
            coverage lcov -o /etc/conbench-coverage-dir/coverage.lcov
      - name: Publish coverage
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          path-to-lcov: _conbench-coverage-dir/coverage.lcov
      - name: Install dependencies
        run: |
          pip install --no-deps \
            -e benchadapt/python \
            -e benchrun/python \
            -e benchconnect && \
          pip install \
            -U --upgrade-strategy eager \
            -e .[dev] \
            -e benchclients/python
      - name: Test benchclients
        run: |
          pytest -vv benchclients/python/tests
      - name: Test benchadapt
        run: |
          pytest -vv benchadapt/python/tests
      - name: Test benchrun
        run: |
          pytest -vv benchrun/python/tests
      - name: Test benchconnect
        run: |
          pytest -vv benchconnect
      # This is to confirm that commonly used developer commands still work.
      # Run `db-populate` twice to see that this can be repeated w/o failing.
      - name: Test dev commands
        run: |
          make rebuild-expected-api-docs
          make run-app-bg && \
            export CONBENCH_BASE_URL=http://$(docker compose port app 5000) && \
            make db-populate && make db-populate
          make teardown-app
          make test-run-app-dev
